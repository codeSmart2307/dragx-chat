package lk.raneesh.csacwk.gui;

import java.awt.Color;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import lk.raneesh.csacwk.controllers.UserController;

/**
 *
 * @author Raneesh Gomez
 */
public class RegistrationJFrame extends javax.swing.JFrame {
    
    private LoginJFrame login;

    /**
     * Creates new form RegistrationJFrame
     */
    public RegistrationJFrame() {
        super("DRAGx Chat | Register");
        initComponents();
        setPlaceholder();
        overrideDefaultCloseOperation();
    }
    
    public void overrideDefaultCloseOperation() {
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
    }
    
    public void setPlaceholder() {
        chatHeaderLabel.requestFocus();
        
        nicknameRegText.setBorder(BorderFactory.createCompoundBorder(
        nicknameRegText.getBorder(), 
        BorderFactory.createEmptyBorder(10, 10, 10, 10)));
        
        loginIdRegText.setBorder(BorderFactory.createCompoundBorder(
        loginIdRegText.getBorder(), 
        BorderFactory.createEmptyBorder(10, 10, 10, 10)));
        
        passwordRegText.setBorder(BorderFactory.createCompoundBorder(
        passwordRegText.getBorder(), 
        BorderFactory.createEmptyBorder(10, 10, 10, 10)));
        
        reenterPasswordRegText.setBorder(BorderFactory.createCompoundBorder(
        reenterPasswordRegText.getBorder(), 
        BorderFactory.createEmptyBorder(10, 10, 10, 10)));
        
        nicknameRegText.setText("Enter Nickname...");
        nicknameRegText.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (nicknameRegText.getText().equals("Enter Nickname...")) {
                    nicknameRegText.setText("");
                    nicknameRegText.setForeground(Color.BLACK);
                }
            }
            @Override
            public void focusLost(FocusEvent e) {
                if (nicknameRegText.getText().isEmpty()) {
                    nicknameRegText.setForeground(Color.GRAY);
                    nicknameRegText.setText("Enter Nickname...");
                }
            }
        });
        
        loginIdRegText.setText("Enter A Login ID...");
        loginIdRegText.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (loginIdRegText.getText().equals("Enter A Login ID...")) {
                    loginIdRegText.setText("");
                    loginIdRegText.setForeground(Color.BLACK);
                }
            }
            @Override
            public void focusLost(FocusEvent e) {
                if (loginIdRegText.getText().isEmpty()) {
                    loginIdRegText.setForeground(Color.GRAY);
                    loginIdRegText.setText("Enter A Login ID...");
                }
            }
        });
        
        passwordRegText.setText("Enter A Password...");
        passwordRegText.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (passwordRegText.getText().equals("Enter A Password...")) {
                    passwordRegText.setText("");
                    passwordRegText.setForeground(Color.BLACK);
                }
            }
            @Override
            public void focusLost(FocusEvent e) {
                if (passwordRegText.getText().isEmpty()) {
                    passwordRegText.setForeground(Color.GRAY);
                    passwordRegText.setText("Enter A Password...");
                }
            }
        });
        
        reenterPasswordRegText.setText("Confirm Password...");
        reenterPasswordRegText.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (reenterPasswordRegText.getText().equals("Confirm Password...")) {
                    reenterPasswordRegText.setText("");
                    reenterPasswordRegText.setForeground(Color.BLACK);
                }
            }
            @Override
            public void focusLost(FocusEvent e) {
                if (reenterPasswordRegText.getText().isEmpty()) {
                    reenterPasswordRegText.setForeground(Color.GRAY);
                    reenterPasswordRegText.setText("Confirm Password...");
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        registerPanel = new javax.swing.JPanel();
        loginIdRegText = new javax.swing.JTextField();
        nicknameRegText = new javax.swing.JTextField();
        registerRegBtn = new javax.swing.JButton();
        passwordRegText = new javax.swing.JPasswordField();
        reenterPasswordRegText = new javax.swing.JPasswordField();
        chatHeaderLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        regQueryTextLabel = new javax.swing.JLabel();
        loginRegisterBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(679, 592));

        registerPanel.setBackground(new java.awt.Color(0, 0, 0));
        registerPanel.setForeground(new java.awt.Color(255, 255, 255));
        registerPanel.setPreferredSize(new java.awt.Dimension(810, 640));

        loginIdRegText.setFont(new java.awt.Font("Poppins Light", 0, 14)); // NOI18N

        nicknameRegText.setFont(new java.awt.Font("Poppins Light", 0, 14)); // NOI18N
        nicknameRegText.setMargin(new java.awt.Insets(2, 2, 2, 0));
        nicknameRegText.setPreferredSize(new java.awt.Dimension(4, 26));

        registerRegBtn.setBackground(new java.awt.Color(102, 153, 0));
        registerRegBtn.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        registerRegBtn.setForeground(new java.awt.Color(255, 255, 255));
        registerRegBtn.setText("REGISTER");
        registerRegBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        registerRegBtn.setBorderPainted(false);
        registerRegBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerRegBtnActionPerformed(evt);
            }
        });

        passwordRegText.setFont(new java.awt.Font("Poppins Light", 0, 14)); // NOI18N

        reenterPasswordRegText.setFont(new java.awt.Font("Poppins Light", 0, 14)); // NOI18N

        chatHeaderLabel.setFont(new java.awt.Font("Roboto Black", 0, 100)); // NOI18N
        chatHeaderLabel.setForeground(new java.awt.Color(153, 153, 0));
        chatHeaderLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        chatHeaderLabel.setText("DRAGx Chat");
        chatHeaderLabel.setToolTipText("");
        chatHeaderLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setForeground(new java.awt.Color(153, 153, 0));
        jLabel1.setText("* Confirm Password");

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setForeground(new java.awt.Color(153, 153, 0));
        jLabel2.setText("* Enter a Password");

        regQueryTextLabel.setForeground(new java.awt.Color(255, 255, 255));
        regQueryTextLabel.setText("Already have an account?");

        loginRegisterBtn.setBackground(new java.awt.Color(0, 51, 51));
        loginRegisterBtn.setFont(new java.awt.Font("Roboto Light", 0, 17)); // NOI18N
        loginRegisterBtn.setForeground(new java.awt.Color(255, 255, 255));
        loginRegisterBtn.setText("Login");
        loginRegisterBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        loginRegisterBtn.setBorderPainted(false);
        loginRegisterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginRegisterBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout registerPanelLayout = new javax.swing.GroupLayout(registerPanel);
        registerPanel.setLayout(registerPanelLayout);
        registerPanelLayout.setHorizontalGroup(
            registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerPanelLayout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(reenterPasswordRegText)
                    .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(loginIdRegText, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(nicknameRegText, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(passwordRegText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registerPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(chatHeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(118, 118, 118))
            .addGroup(registerPanelLayout.createSequentialGroup()
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registerPanelLayout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(registerRegBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(registerPanelLayout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addComponent(regQueryTextLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loginRegisterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        registerPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {loginIdRegText, nicknameRegText, passwordRegText, reenterPasswordRegText});

        registerPanelLayout.setVerticalGroup(
            registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerPanelLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(chatHeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(nicknameRegText, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(loginIdRegText, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordRegText, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reenterPasswordRegText, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(registerRegBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(regQueryTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loginRegisterBtn))
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(registerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(registerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void registerRegBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerRegBtnActionPerformed
        String nickname = nicknameRegText.getText();
        String username = loginIdRegText.getText();
        char[] password = passwordRegText.getText().toCharArray();        
        char[] confirmPassword = reenterPasswordRegText.getText().toCharArray();
        
        UserController.registerUser(nickname, username, password, confirmPassword);
        
//        boolean isRegistrationValid = UserServiceClient.register(nickname, username, String.valueOf(password), String.valueOf(confirmPassword));
//        
//        if (isRegistrationValid) {
//            System.out.println("Registration Successful");
//        }
    }//GEN-LAST:event_registerRegBtnActionPerformed

    private void loginRegisterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginRegisterBtnActionPerformed
        login = new LoginJFrame();
        login.setVisible(true);
        this.setVisible(false);
        //dispose();
    }//GEN-LAST:event_loginRegisterBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrationJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrationJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrationJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrationJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrationJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel chatHeaderLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField loginIdRegText;
    private javax.swing.JButton loginRegisterBtn;
    private javax.swing.JTextField nicknameRegText;
    private javax.swing.JPasswordField passwordRegText;
    private javax.swing.JPasswordField reenterPasswordRegText;
    private javax.swing.JLabel regQueryTextLabel;
    private javax.swing.JPanel registerPanel;
    private javax.swing.JButton registerRegBtn;
    // End of variables declaration//GEN-END:variables
}
