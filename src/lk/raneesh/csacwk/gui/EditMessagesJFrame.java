/**
 * File Name: AddThreadJFrame.java
 */

package lk.raneesh.csacwk.gui;

import java.awt.Color;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import lk.raneesh.csacwk.controllers.ChatController;
import lk.raneesh.csacwk.datastructure.MessageList;
import lk.raneesh.csacwk.datastructure.RefreshMessages;
import lk.raneesh.csacwk.datastructure.User;
import lk.raneesh.csacwk.gui.customlist.MessagePanel;

public class EditMessagesJFrame extends javax.swing.JFrame {   
    
    private SelectThreadJFrame selectThread;    
    private static int threadId;
    private RefreshMessages autoRefreshMessages;
    private Thread messagesRefreshThread;

    public static int getThreadId() {
        return threadId;
    }

    public static void setThreadId(int threadId) {
        EditMessagesJFrame.threadId = threadId;
    }

    // Default List Model contains the list of messages to be displayed in the custom list layout
    public static DefaultListModel<MessageList> messageListModel = new DefaultListModel<>();
    
    /**
     * Creates new form EditThreadJFrame
     */
    public EditMessagesJFrame() {
        super("DRAGx Chat | Edit Threads");
        initComponents();        
        generateMessageList();
        setPlaceholder();         
        //retrieveAllMessages();   
        generateUserGreeting();
        runAutoRefresh();
    }
    
    public EditMessagesJFrame(int threadId) {
        super("DRAGx Chat | Edit Threads");
        this.threadId = threadId;        
        initComponents();        
        generateMessageList();
        setPlaceholder();         
        //retrieveAllMessages();
        getThreadTitle();
        generateUserGreeting();
        runAutoRefresh();
    }
    
    // Calls the default list model and sets the renderer to the custom layout
    public void generateMessageList() {          
        messageJList.setModel(messageListModel);
        messageJList.setCellRenderer(new MessagePanel());
    }   
    
    // Generates a user greeting on login using the static user object
    public void generateUserGreeting() {
        this.userGreetingLabel.setText("Welcome, " + User.getCurrUser().getNickname() + "!");
    }
    
    // Retrieves all messages belonging to a specific thread
    public void retrieveAllMessages() {
        messageListModel.removeAllElements();
        ArrayList<MessageList> currentMessagesList = ChatController.retrieveThreadSpecificMessages(EditMessagesJFrame.getThreadId());
        System.out.println(threadId);
        
        for (int i = 0; i < currentMessagesList.size(); i++) {
            messageListModel.addElement(new MessageList(currentMessagesList.get(i).getThreadId(), currentMessagesList.get(i).getMessageId(), currentMessagesList.get(i).getMessageBody(), currentMessagesList.get(i).getMessageAuthor(), currentMessagesList.get(i).getMessageDate()));
        }
    }
    
    // Gets the title of the thread that the set of messages belong to
    public void getThreadTitle() {
        String threadTitle = ChatController.getThreadTitle(EditMessagesJFrame.getThreadId());
        this.threadTitleLabel.setText("| " + threadTitle);
    }
    
    // Sets placeholder text to each field
    public void setPlaceholder() {
        messageTextField.setBorder(BorderFactory.createCompoundBorder(
        messageTextField.getBorder(), 
        BorderFactory.createEmptyBorder(10, 10, 10, 10)));
        
        messageTextField.setText("Enter Message Here...");
        messageTextField.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (messageTextField.getText().equals("Enter Message Here...")) {
                    messageTextField.setText("");
                    messageTextField.setForeground(Color.BLACK);
                }
            }
            @Override
            public void focusLost(FocusEvent e) {
                if (messageTextField.getText().isEmpty()) {
                    messageTextField.setForeground(Color.GRAY);
                    messageTextField.setText("Enter Message Here...");
                }
            }
        });
    }
    
    // Initializes the runnable class and passes it as a parameter to a thread to auto refresh messages
    public void runAutoRefresh() {
       autoRefreshMessages = new RefreshMessages(); 
       messagesRefreshThread = new Thread(autoRefreshMessages);
       messagesRefreshThread.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editMessagesPanel = new javax.swing.JPanel();
        userGreetingLabel = new javax.swing.JLabel();
        editMessagesHeaderLabel = new javax.swing.JLabel();
        messageTextField = new javax.swing.JTextField();
        messageAddButton = new javax.swing.JButton();
        chatHeaderLabel = new javax.swing.JLabel();
        messageScrollpane = new javax.swing.JScrollPane();
        messageJList = new javax.swing.JList<>();
        backToThreadButton = new javax.swing.JButton();
        javax.swing.JButton refreshButton = new javax.swing.JButton();
        threadTitleLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(810, 730));
        setResizable(false);

        editMessagesPanel.setBackground(new java.awt.Color(0, 0, 0));
        editMessagesPanel.setPreferredSize(new java.awt.Dimension(810, 700));

        userGreetingLabel.setBackground(new java.awt.Color(0, 0, 0));
        userGreetingLabel.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        userGreetingLabel.setForeground(new java.awt.Color(255, 255, 255));
        userGreetingLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        userGreetingLabel.setText("Welcome, ");

        editMessagesHeaderLabel.setBackground(new java.awt.Color(255, 255, 255));
        editMessagesHeaderLabel.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        editMessagesHeaderLabel.setForeground(new java.awt.Color(255, 255, 255));
        editMessagesHeaderLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        editMessagesHeaderLabel.setText("Edit Messages");
        editMessagesHeaderLabel.setToolTipText("");

        messageTextField.setFont(new java.awt.Font("Poppins Light", 0, 14)); // NOI18N

        messageAddButton.setBackground(new java.awt.Color(102, 153, 0));
        messageAddButton.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        messageAddButton.setForeground(new java.awt.Color(255, 255, 255));
        messageAddButton.setText("ADD");
        messageAddButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        messageAddButton.setBorderPainted(false);
        messageAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageAddButtonActionPerformed(evt);
            }
        });

        chatHeaderLabel.setFont(new java.awt.Font("Roboto Black", 0, 100)); // NOI18N
        chatHeaderLabel.setForeground(new java.awt.Color(153, 153, 0));
        chatHeaderLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        chatHeaderLabel.setText("DRAGx Chat");
        chatHeaderLabel.setToolTipText("");
        chatHeaderLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        messageScrollpane.setViewportView(messageJList);

        backToThreadButton.setBackground(new java.awt.Color(0, 51, 51));
        backToThreadButton.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        backToThreadButton.setForeground(new java.awt.Color(255, 255, 255));
        backToThreadButton.setText("BACK");
        backToThreadButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backToThreadButton.setBorderPainted(false);
        backToThreadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToThreadButtonActionPerformed(evt);
            }
        });

        refreshButton.setBackground(new java.awt.Color(0, 51, 51));
        refreshButton.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        refreshButton.setForeground(new java.awt.Color(255, 255, 255));
        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        threadTitleLabel.setBackground(new java.awt.Color(0, 0, 0));
        threadTitleLabel.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        threadTitleLabel.setForeground(new java.awt.Color(255, 255, 255));
        threadTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        threadTitleLabel.setText("| Title");

        javax.swing.GroupLayout editMessagesPanelLayout = new javax.swing.GroupLayout(editMessagesPanel);
        editMessagesPanel.setLayout(editMessagesPanelLayout);
        editMessagesPanelLayout.setHorizontalGroup(
            editMessagesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editMessagesPanelLayout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(backToThreadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(messageAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editMessagesPanelLayout.createSequentialGroup()
                .addContainerGap(106, Short.MAX_VALUE)
                .addGroup(editMessagesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editMessagesPanelLayout.createSequentialGroup()
                        .addGroup(editMessagesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(messageScrollpane, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(messageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(editMessagesPanelLayout.createSequentialGroup()
                                .addComponent(refreshButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(editMessagesHeaderLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(threadTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)))
                        .addGap(98, 98, 98))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editMessagesPanelLayout.createSequentialGroup()
                        .addGroup(editMessagesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(userGreetingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chatHeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(117, 117, 117))))
        );
        editMessagesPanelLayout.setVerticalGroup(
            editMessagesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editMessagesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(userGreetingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chatHeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editMessagesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(threadTitleLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                    .addGroup(editMessagesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(editMessagesHeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(messageScrollpane, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(messageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(editMessagesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backToThreadButton))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editMessagesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editMessagesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void messageAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageAddButtonActionPerformed
        String currMessage = messageTextField.getText(); // Gets the new message body
        ArrayList<String> newMessageList = ChatController.createNewMessage(threadId, currMessage);// Sends message body to web client       
        
        // Retrieves new message body saved in the database for display
        messageListModel.addElement(new MessageList(Integer.parseInt(newMessageList.get(0)), Integer.parseInt(newMessageList.get(1)), newMessageList.get(2), newMessageList.get(3), newMessageList.get(4)));   
        
        messageTextField.setForeground(Color.GRAY);
        messageTextField.setText("");
    }//GEN-LAST:event_messageAddButtonActionPerformed

    private void backToThreadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToThreadButtonActionPerformed
        selectThread = new SelectThreadJFrame(); // Opens select threads page
        selectThread.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backToThreadButtonActionPerformed

    // Removes all elements from default list model and reinitializes it with updated elements
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        messageListModel.removeAllElements();
        retrieveAllMessages();
    }//GEN-LAST:event_refreshButtonActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditMessagesJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditMessagesJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditMessagesJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditMessagesJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditMessagesJFrame().setVisible(true);
            }
        });         
             
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backToThreadButton;
    private javax.swing.JLabel chatHeaderLabel;
    private javax.swing.JLabel editMessagesHeaderLabel;
    private javax.swing.JPanel editMessagesPanel;
    private javax.swing.JButton messageAddButton;
    private javax.swing.JList<MessageList> messageJList;
    private javax.swing.JScrollPane messageScrollpane;
    private javax.swing.JTextField messageTextField;
    private javax.swing.JLabel threadTitleLabel;
    private javax.swing.JLabel userGreetingLabel;
    // End of variables declaration//GEN-END:variables
}
